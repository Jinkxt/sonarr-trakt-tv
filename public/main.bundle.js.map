{"version":3,"sources":["/Users/milanp/Repos/sonarr-trakt-tv-ui/src/$_lazy_route_resource lazy","/Users/milanp/Repos/sonarr-trakt-tv-ui/src/app/app.component.css","/Users/milanp/Repos/sonarr-trakt-tv-ui/src/app/app.component.html","/Users/milanp/Repos/sonarr-trakt-tv-ui/src/app/app.component.ts","/Users/milanp/Repos/sonarr-trakt-tv-ui/src/app/app.module.ts","/Users/milanp/Repos/sonarr-trakt-tv-ui/src/app/list-dialog/list-dialog.component.css","/Users/milanp/Repos/sonarr-trakt-tv-ui/src/app/list-dialog/list-dialog.component.html","/Users/milanp/Repos/sonarr-trakt-tv-ui/src/app/list-dialog/list-dialog.component.ts","/Users/milanp/Repos/sonarr-trakt-tv-ui/src/app/list.service.ts","/Users/milanp/Repos/sonarr-trakt-tv-ui/src/app/list/list.component.css","/Users/milanp/Repos/sonarr-trakt-tv-ui/src/app/list/list.component.html","/Users/milanp/Repos/sonarr-trakt-tv-ui/src/app/list/list.component.ts","/Users/milanp/Repos/sonarr-trakt-tv-ui/src/app/settings.service.ts","/Users/milanp/Repos/sonarr-trakt-tv-ui/src/app/settings/settings.component.css","/Users/milanp/Repos/sonarr-trakt-tv-ui/src/app/settings/settings.component.html","/Users/milanp/Repos/sonarr-trakt-tv-ui/src/app/settings/settings.component.ts","/Users/milanp/Repos/sonarr-trakt-tv-ui/src/app/sonarr.service.ts","/Users/milanp/Repos/sonarr-trakt-tv-ui/src/environments/environment.ts","/Users/milanp/Repos/sonarr-trakt-tv-ui/src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,yF;;;;;;;ACVA;AACA;;;AAGA;AACA,oCAAqC,uBAAuB,mBAAmB,kBAAkB,GAAG;;AAEpG;;;AAGA;AACA,2C;;;;;;;ACXA,gV;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAFY,YAAY;QALxB,wEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACb;AACF;AACF;AACoC;AAiClD;AAEoB;AACO;AACY;AACQ;AAmD1E;IAAA;IAAyB,CAAC;IAAb,SAAS;QAhDrB,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;gBACZ,2EAAa;gBACb,uFAAiB;gBACjB,+FAAmB;aACpB;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,mEAAW;gBACX,iEAAU;gBACV,qGAAuB;gBACvB,gFAAqB;gBACrB,0EAAe;gBACf,gFAAqB;gBACrB,wEAAa;gBACb,4EAAiB;gBACjB,yEAAc;gBACd,8EAAmB;gBACnB,0EAAe;gBACf,6EAAkB;gBAClB,4EAAiB;gBACjB,wEAAa;gBACb,yEAAc;gBACd,wEAAa;gBACb,wEAAa;gBACb,8EAAmB;gBACnB,6EAAkB;gBAClB,+EAAoB;gBACpB,mFAAwB;gBACxB,yEAAc;gBACd,0EAAe;gBACf,0EAAe;gBACf,2EAAgB;gBAChB,0EAAe;gBACf,+EAAoB;gBACpB,4EAAiB;gBACjB,wEAAa;gBACb,yEAAc;gBACd,wEAAa;gBACb,2EAAgB;gBAChB,2EAAgB;gBAChB,2EAAgB;aACjB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,oEAAY,CAAC;YACzB,eAAe,EAAE,CAAC,+FAAmB,CAAC;SACvC,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;AC7FtB;AACA;;;AAGA;AACA,0CAA2C,qBAAqB,mBAAmB,GAAG;;AAEtF;;;AAGA;AACA,2C;;;;;;;ACXA,iDAAiD,kgBAAkgB,kBAAkB,wRAAwR,gBAAgB,4QAA4Q,eAAe,6W;;;;;;;;;;;;;;;;;;;;;;;;;ACA9kC;AACQ;AACpB;AACI;AAElD;IAAA;IAQA,CAAC;IAAD,eAAC;AAAD,CAAC;AAQD;IAME,6BACS,SAA4C,EACnB,IAAS,EACjC,WAAwB,EACxB,aAA4B;QAH7B,cAAS,GAAT,SAAS,CAAmC;QACnB,SAAI,GAAJ,IAAI,CAAK;QACjC,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;IAAI,CAAC;IAG3C,sCAAQ,GAAR;QAAA,iBASC;QARC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;QAC1B,IAAI,CAAC,QAAQ,GAAG,CAAC;gBACf,KAAK,EAAE,CAAC;gBACR,SAAS,EAAE,WAAW;aACvB,CAAC,CAAC;QAEH,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,iBAAO,IAAI,YAAI,CAAC,OAAO,GAAG,OAAO,EAAtB,CAAsB,CAAC,CAAC;QAC7E,IAAI,CAAC,aAAa,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,kBAAQ,IAAI,YAAI,CAAC,QAAQ,GAAG,QAAQ,EAAxB,CAAwB,CAAC,CAAC;IACrF,CAAC;IAED,mCAAK,GAAL;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,sCAAQ,GAAR,UAAS,IAAI;QAAb,iBAWC;QAVC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;YACZ,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC;gBACnD,KAAI,CAAC,KAAK,EAAE,CAAC;YACf,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC;gBAC1C,KAAI,CAAC,KAAK,EAAE,CAAC;YACf,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAvCU,mBAAmB;QAN/B,wEAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;YAG3B,SAAS,EAAE,CAAC,kEAAW,EAAE,sEAAa,CAAC;SACxC,CAAC;QASG,gFAAM,CAAC,0EAAe,CAAC;yCADN,uEAAY,UAET,kEAAW;YACT,sEAAa;OAV3B,mBAAmB,CAwC/B;IAAD,0BAAC;CAAA;AAxC+B;;;;;;;;;;;;;;;;;;;;;;;ACrBW;AACI;AAChB;AACK;AAGpC;IAEE,qBACU,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAChB,CAAC;IAEL,+BAAS,GAAT;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC;aAChC,GAAG,CAAC,UAAC,GAAY,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrC,CAAC;IAED,gCAAU,GAAV,UAAW,EAAE,EAAE,IAAI;QACjB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAa,EAAI,EAAE,IAAI,CAAC;aAC5C,GAAG,CAAC,UAAC,GAAY,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrC,CAAC;IAED,gCAAU,GAAV,UAAW,IAAI;QACb,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC;aACvC,GAAG,CAAC,UAAC,GAAY,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrC,CAAC;IAED,gCAAU,GAAV,UAAW,EAAE;QACX,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,eAAa,EAAI,CAAC;aACzC,GAAG,CAAC,UAAC,GAAY,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrC,CAAC;IAxBU,WAAW;QADvB,yEAAU,EAAE;yCAIK,2DAAI;OAHT,WAAW,CAyBvB;IAAD,kBAAC;CAAA;AAzBuB;;;;;;;;ACNxB;AACA;;;AAGA;AACA,mCAAoC,iCAAiC,8BAA8B,6BAA6B,GAAG,WAAW,2BAA2B,2BAA2B,oBAAoB,0BAA0B,0BAA0B,+BAA+B,gCAAgC,sCAAsC,GAAG,eAAe,0BAA0B,sBAAsB,sBAAsB,uBAAuB,uBAAuB,mBAAmB,GAAG,uBAAuB,sBAAsB,GAAG;;AAE7jB;;;AAGA;AACA,2C;;;;;;;ACXA,oRAAoR,eAAe,8T;;;;;;;;;;;;;;;;;;;;;;;ACAjP;AACJ;AAC4B;AAC5B;AACI;AAGlD;IAAA;IASA,CAAC;IAAD,eAAC;AAAD,CAAC;AAQD;IAGE,uBAAoB,WAAwB,EAAU,aAA4B,EAAU,MAAiB;QAAzF,gBAAW,GAAX,WAAW,CAAa;QAAU,kBAAa,GAAb,aAAa,CAAe;QAAU,WAAM,GAAN,MAAM,CAAW;QAC3G,IAAI,CAAC,IAAI,GAAG,IAAI,KAAK,EAAY,CAAC;IACpC,CAAC;IAED,gCAAQ,GAAR;QAAA,iBAEC;QADC,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,IAAI,GAAG,IAAI,EAAhB,CAAgB,CAAC,CAAC;IACnE,CAAC;IAED,+BAAO,GAAP;QACE,IAAI,CAAC,UAAU,CAAC,IAAI,QAAQ,EAAE,CAAC,CAAC;IAClC,CAAC;IAED,kCAAU,GAAV,UAAW,IAAI;QACb,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;YACZ,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAQ,CAAC,CAAC,CAAC;QAC5D,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,iBAAO,IAAI,cAAO,KAAK,IAAI,EAAhB,CAAgB,CAAC,EAAE,CAAC,CAAC,CAAC;IACxE,CAAC;IAED,gCAAQ,GAAR,UAAS,IAAI,EAAE,MAAM;QACnB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,cAAQ,CAAC,CAAC,CAAC;IAClE,CAAC;IAED,kCAAU,GAAV,UAAW,QAAQ;QAAnB,iBAUC;QATC,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAClC,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,+FAAmB,EAAE;YACpD,IAAI,EAAE,QAAQ;SACf,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,KAAI,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,IAAI,GAAG,IAAI,EAAhB,CAAgB,CAAC,CAAC;QACnE,CAAC,CAAC,CAAC;IACL,CAAC;IAtCU,aAAa;QANzB,wEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;YAGpB,SAAS,EAAE,CAAC,kEAAW,EAAE,sEAAa,CAAC;SACxC,CAAC;yCAIiC,kEAAW,EAAyB,sEAAa,EAAkB,oEAAS;OAHlG,aAAa,CAuCzB;IAAD,oBAAC;CAAA;AAvCyB;;;;;;;;;;;;;;;;;;;;;;;ACxBiB;AACI;AAChB;AACK;AAGpC;IAEE,yBACU,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAChB,CAAC;IAEL,uCAAa,GAAb;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC;aACpC,GAAG,CAAC,UAAC,GAAY,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrC,CAAC;IAED,wCAAc,GAAd,UAAe,EAAE,EAAE,IAAI;QACrB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,mBAAiB,EAAI,EAAE,IAAI,CAAC;aAChD,GAAG,CAAC,UAAC,GAAY,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrC,CAAC;IAED,wCAAc,GAAd,UAAe,IAAI;QACjB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC;aAC3C,GAAG,CAAC,UAAC,GAAY,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrC,CAAC;IAnBU,eAAe;QAD3B,yEAAU,EAAE;yCAIK,2DAAI;OAHT,eAAe,CAoB3B;IAAD,sBAAC;CAAA;AApB2B;;;;;;;;ACN5B;AACA;;;AAGA;AACA,qDAAsD,iBAAiB,GAAG;;AAE1E;;;AAGA;AACA,2C;;;;;;;ACXA,2sBAA2sB,iH;;;;;;;;;;;;;;;;;;;;ACAtoB;AACf;AAGtD;IAAA;IAMA,CAAC;IAAD,eAAC;AAAD,CAAC;AASD;IAGE,2BAAoB,cAA+B;QAA/B,mBAAc,GAAd,cAAc,CAAiB;QACjD,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;IACjC,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAGC;QADC,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,kBAAQ,IAAI,YAAI,CAAC,QAAQ,GAAG,QAAQ,EAAxB,CAAwB,CAAC,CAAC;IACtF,CAAC;IAED,wCAAY,GAAZ;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAQ,CAAC,CAAC,CAAC;QAC3F,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAQ,CAAC,CAAC,CAAC;QACzE,CAAC;IACH,CAAC;IAlBU,iBAAiB;QAP7B,wEAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;YAGxB,SAAS,EAAE,CAAC,0EAAe,CAAC;YAC5B,aAAa,EAAE,yEAAiB,CAAC,IAAI;SACtC,CAAC;yCAIoC,0EAAe;OAHxC,iBAAiB,CAoB7B;IAAD,wBAAC;CAAA;AApB6B;;;;;;;;;;;;;;;;;;;;;;;ACnBa;AACI;AAChB;AACK;AAGpC;IAEE,uBACU,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAChB,CAAC;IAEL,kCAAU,GAAV;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC;aACxC,GAAG,CAAC,UAAC,GAAY,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrC,CAAC;IAED,qCAAa,GAAb;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,sBAAsB,CAAC;aAC3C,GAAG,CAAC,UAAC,GAAY,IAAK,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IACrC,CAAC;IAdU,aAAa;QADzB,yEAAU,EAAE;yCAIK,2DAAI;OAHT,aAAa,CAezB;IAAD,oBAAC;CAAA;AAfyB;;;;;;;;;ACN1B;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,+EAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/milanp/Repos/sonarr-trakt-tv-ui/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".container{\\n    max-width: 900px;\\n    margin: auto;\\n    width: 100%;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/milanp/Repos/sonarr-trakt-tv-ui/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\" class=\\\"container\\\">\\n    <mat-tab-group>\\n        <mat-tab label=\\\"List\\\"><app-list></app-list></mat-tab>\\n        <mat-tab label=\\\"Settings\\\"><app-settings></app-settings></mat-tab>\\n      </mat-tab-group>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/milanp/Repos/sonarr-trakt-tv-ui/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/milanp/Repos/sonarr-trakt-tv-ui/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { NgModule } from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatStepperModule,\n} from '@angular/material';\n\nimport { AppComponent } from './app.component';\nimport { ListComponent } from './list/list.component';\nimport { SettingsComponent } from './settings/settings.component';\nimport { ListDialogComponent } from './list-dialog/list-dialog.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListComponent,\n    SettingsComponent,\n    ListDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    BrowserAnimationsModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatStepperModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents: [ListDialogComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/milanp/Repos/sonarr-trakt-tv-ui/src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".mat-form-field {\\n    display: block;\\n    width: 350px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/milanp/Repos/sonarr-trakt-tv-ui/src/app/list-dialog/list-dialog.component.css\n// module id = ../../../../../src/app/list-dialog/list-dialog.component.css\n// module chunks = main","module.exports = \"<div style=\\\"text-align: right;\\\">\\n  <button mat-button (click)=\\\"close()\\\">\\n    <mat-icon>close</mat-icon>\\n  </button>\\n</div>\\n<form novalidate style=\\\"text-align: center\\\"  #listForm=\\\"ngForm\\\">\\n  <mat-form-field>\\n    <input matInput placeholder=\\\"Name\\\" required [(ngModel)]=\\\"listItem.name\\\" name=\\\"name\\\">\\n  </mat-form-field>\\n  <mat-form-field>\\n    <mat-select placeholder=\\\"List Type\\\" [(ngModel)]=\\\"listItem.listType\\\" name=\\\"list\\\" required>\\n      <mat-option *ngFor=\\\"let item of trakList\\\" [value]=\\\"item.value\\\">\\n        {{ item.viewValue }}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n  <mat-form-field>\\n    <mat-select placeholder=\\\"Quality Profile\\\" [(ngModel)]=\\\"listItem.profile\\\" name=\\\"profile\\\" required>\\n      <mat-option *ngFor=\\\"let profile of profiles\\\" [value]=\\\"profile.id\\\">\\n        {{ profile.name }}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n  <mat-form-field>\\n    <mat-select placeholder=\\\"Folder\\\" [(ngModel)]=\\\"listItem.folder\\\" name=\\\"folder\\\" required>\\n      <mat-option *ngFor=\\\"let folder of folders\\\" [value]=\\\"folder.path\\\">\\n        {{ folder.path }}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n  <mat-form-field>\\n    <input matInput placeholder=\\\"Username\\\" [(ngModel)]=\\\"listItem.username\\\" name=\\\"username\\\" required>\\n  </mat-form-field>\\n  <div>\\n    <button (click)=\\\"saveList(listItem)\\\" mat-raised-button color=\\\"primary\\\" [disabled]=\\\"listForm.invalid\\\">save</button>\\n  </div>\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/milanp/Repos/sonarr-trakt-tv-ui/src/app/list-dialog/list-dialog.component.html\n// module id = ../../../../../src/app/list-dialog/list-dialog.component.html\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { ListService } from '../list.service';\nimport { SonarrService } from '../sonarr.service';\n\nclass ListItem {\n  name: string;\n  listType: number;\n  score: string;\n  username: string;\n  limit: string;\n  folder: string;\n  profile: number;\n}\n\n@Component({\n  selector: 'app-list-dialog',\n  templateUrl: './list-dialog.component.html',\n  styleUrls: ['./list-dialog.component.css'],\n  providers: [ListService, SonarrService]\n})\nexport class ListDialogComponent implements OnInit {\n\n  public trakList: Array<any>;\n  public listItem: ListItem;\n  public folders: Array<any>;\n  public profiles: Array<any>;\n  constructor(\n    public dialogRef: MatDialogRef<ListDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    private listService: ListService, \n    private sonarrService: SonarrService) { }\n\n\n  ngOnInit() {\n    this.listItem = this.data;\n    this.trakList = [{\n      value: 1,\n      viewValue: 'Watchlist'\n    }];\n\n    this.sonarrService.fetchPaths().subscribe(folders => this.folders = folders);\n    this.sonarrService.fetchProfiles().subscribe(profiles => this.profiles = profiles);\n  }\n\n  close(): void {\n    this.dialogRef.close();\n  }\n\n  saveList(item) {\n    if (item.id) {\n      this.listService.updateList(item.id, item).subscribe(() => { \n        this.close();\n      });\n    } else {\n      item.enabled = true;\n      this.listService.createList(item).subscribe(() => { \n        this.close();\n      });\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/milanp/Repos/sonarr-trakt-tv-ui/src/app/list-dialog/list-dialog.component.ts","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/mergeMap';\n\n@Injectable()\nexport class ListService {\n\n  constructor(\n    private http: Http\n  ) { }\n\n  fetchList() {\n    return this.http.get(`/api/list`)\n    .map((res:Response) => res.json());\n  }\n\n  updateList(id, body) {\n    return this.http.put(`/api/list/${id}`, body)\n    .map((res:Response) => res.json());\n  }\n\n  createList(body) {\n    return this.http.post(`/api/list`, body)\n    .map((res:Response) => res.json());\n  }\n\n  deleteList(id) {\n    return this.http.delete(`/api/list/${id}`)\n    .map((res:Response) => res.json());\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/milanp/Repos/sonarr-trakt-tv-ui/src/app/list.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".fab-add {\\n    position: fixed !important;\\n    bottom: 50px !important;\\n    right: 50px !important;\\n}\\n\\n.flex {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -ms-flex-wrap: wrap;\\n        flex-wrap: wrap;\\n    -webkit-box-pack: center;\\n        -ms-flex-pack: center;\\n            justify-content: center;\\n}\\n\\n.mat-card {\\n    -webkit-box-flex: 1;\\n        -ms-flex: 1;\\n            flex: 1;\\n    max-width: 350px;\\n    min-width: 350px;\\n    margin: 15px;\\n}\\n\\n.mat-card-content {\\n    cursor: pointer;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/milanp/Repos/sonarr-trakt-tv-ui/src/app/list/list.component.css\n// module id = ../../../../../src/app/list/list.component.css\n// module chunks = main","module.exports = \"<div class=\\\"flex\\\">\\n  <button mat-fab color=\\\"primary\\\" class=\\\"fab-add\\\" (click)=\\\"addList()\\\">\\n    <mat-icon>add</mat-icon>\\n  </button>\\n  <mat-card *ngFor=\\\"let listItem of list\\\">\\n    <mat-card-content (click)=\\\"openDialog(listItem)\\\">\\n      <h2>{{listItem.name}}</h2>\\n    </mat-card-content>\\n    <mat-card-actions>\\n      <mat-slide-toggle [checked]=\\\"listItem.enabled\\\" (change)=\\\"saveList(listItem, $event)\\\" name=\\\"enabled\\\">Enabled</mat-slide-toggle>\\n      <button (click)=\\\"deleteList(listItem)\\\" mat-button>DELETE</button>\\n    </mat-card-actions>\\n  </mat-card>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/milanp/Repos/sonarr-trakt-tv-ui/src/app/list/list.component.html\n// module id = ../../../../../src/app/list/list.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { ListDialogComponent } from '../list-dialog/list-dialog.component'\nimport { ListService } from '../list.service';\nimport { SonarrService } from '../sonarr.service';\n\n\nclass ListItem {\n  name: string;\n  listType: number;\n  score: string;\n  username: string;\n  limit: string;\n  folder: string;\n  profile: number;\n  enabled: boolean;\n}\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css'],\n  providers: [ListService, SonarrService]\n})\nexport class ListComponent implements OnInit {\n  public list: Array<ListItem>;\n\n  constructor(private listService: ListService, private sonarrService: SonarrService, private dialog: MatDialog) {\n    this.list = new Array<ListItem>();\n  }\n\n  ngOnInit() {\n    this.listService.fetchList().subscribe(list => this.list = list);\n  }\n\n  addList() {\n    this.openDialog(new ListItem());\n  }\n\n  deleteList(list) {\n    if (list.id) {\n      this.listService.deleteList(list.id).subscribe(() => { });\n    }\n\n    this.list.splice(this.list.findIndex(element => element === list), 1);\n  }\n\n  saveList(item, $event) {\n    item.enabled = $event.checked;\n    this.listService.updateList(item.id, item).subscribe(() => { });\n  }\n\n  openDialog(listItem): void {\n    let itemCopy = {};\n    Object.assign(itemCopy, listItem);\n    let dialogRef = this.dialog.open(ListDialogComponent, {\n      data: itemCopy\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.listService.fetchList().subscribe(list => this.list = list);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/milanp/Repos/sonarr-trakt-tv-ui/src/app/list/list.component.ts","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/mergeMap';\n\n@Injectable()\nexport class SettingsService {\n\n  constructor(\n    private http: Http\n  ) { }\n\n  fetchSettings() {\n    return this.http.get(`/api/settings`)\n    .map((res:Response) => res.json());\n  }\n\n  updateSettings(id, body) {\n    return this.http.put(`/api/settings/${id}`, body)\n    .map((res:Response) => res.json());\n  }\n\n  createSettings(body) {\n    return this.http.post(`/api/settings`, body)\n    .map((res:Response) => res.json());\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/milanp/Repos/sonarr-trakt-tv-ui/src/app/settings.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.settings mat-form-field {\\n    width: 50%;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/milanp/Repos/sonarr-trakt-tv-ui/src/app/settings/settings.component.css\n// module id = ../../../../../src/app/settings/settings.component.css\n// module chunks = main","module.exports = \"<form novalidate class=\\\"settings\\\">\\n  <h2>Sonarr Settings</h2>\\n  <mat-form-field>\\n    <input matInput placeholder=\\\"Hostname\\\" required [(ngModel)]=\\\"settings.hostname\\\" name=\\\"hostname\\\">\\n  </mat-form-field>\\n  <mat-form-field>\\n    <input matInput placeholder=\\\"Port\\\" required [(ngModel)]=\\\"settings.port\\\" name=\\\"port\\\">\\n  </mat-form-field>\\n  <mat-form-field>\\n    <input matInput placeholder=\\\"Api Key\\\" required [(ngModel)]=\\\"settings.apiKey\\\" name=\\\"apiKey\\\">\\n  </mat-form-field>\\n  <mat-form-field>\\n    <input matInput placeholder=\\\"Update Interval In Minutes\\\" required [(ngModel)]=\\\"settings.interval\\\" name=\\\"interval\\\">\\n  </mat-form-field>\\n  <div style=\\\"text-align: center;\\\">\\n    <button (click)=\\\"saveSettings()\\\" mat-raised-button color=\\\"primary\\\">Save</button>\\n  </div>\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/milanp/Repos/sonarr-trakt-tv-ui/src/app/settings/settings.component.html\n// module id = ../../../../../src/app/settings/settings.component.html\n// module chunks = main","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { SettingsService } from '../settings.service';\n\n\nclass Settings {\n  hostname: string;\n  port: number;\n  apiKey: string;\n  interval: number;\n  id: string;\n}\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css'],\n  providers: [SettingsService],\n  encapsulation: ViewEncapsulation.None\n})\nexport class SettingsComponent implements OnInit {\n  public settings: Settings;\n\n  constructor(private settingService: SettingsService) {\n    this.settings = new Settings();\n  }\n\n  ngOnInit() {\n\n    this.settingService.fetchSettings().subscribe(settings => this.settings = settings);\n  }\n\n  saveSettings() {\n    if (this.settings.id) {\n      this.settingService.updateSettings(this.settings.id, this.settings).subscribe(() => { });\n    } else {\n      this.settingService.createSettings(this.settings).subscribe(() => { });\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/milanp/Repos/sonarr-trakt-tv-ui/src/app/settings/settings.component.ts","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/mergeMap';\n\n@Injectable()\nexport class SonarrService {\n\n  constructor(\n    private http: Http\n  ) { }\n\n  fetchPaths() {\n    return this.http.get(`/api/sonarr/paths`)\n    .map((res:Response) => res.json());\n  }\n\n  fetchProfiles() {\n    return this.http.get(`/api/sonarr/profiles`)\n    .map((res:Response) => res.json());\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/milanp/Repos/sonarr-trakt-tv-ui/src/app/sonarr.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/milanp/Repos/sonarr-trakt-tv-ui/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Users/milanp/Repos/sonarr-trakt-tv-ui/src/main.ts"],"sourceRoot":"webpack:///"}